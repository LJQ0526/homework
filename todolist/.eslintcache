[{"E:\\react\\TODO\\todolist\\src\\index.tsx":"1","E:\\homework\\todolist\\src\\index.tsx":"2","E:\\homework\\todolist\\src\\rapper\\overrideFetch.ts":"3","E:\\homework\\todolist\\src\\reducers\\rootReducer.ts":"4","E:\\homework\\todolist\\src\\App.tsx":"5","E:\\homework\\todolist\\src\\rapper\\index.ts":"6","E:\\homework\\todolist\\src\\rapper\\redux.ts":"7","E:\\homework\\todolist\\src\\rapper\\request.ts":"8"},{"size":715,"mtime":1611067313855,"results":"9","hashOfConfig":"10"},{"size":715,"mtime":1611067313855,"results":"11","hashOfConfig":"12"},{"size":401,"mtime":1611021098052,"results":"13","hashOfConfig":"12"},{"size":497,"mtime":1611067618526,"results":"14","hashOfConfig":"12"},{"size":4683,"mtime":1611067795291,"results":"15","hashOfConfig":"12"},{"size":1410,"mtime":1610979800555,"results":"16","hashOfConfig":"12"},{"size":9464,"mtime":1610979800555,"results":"17","hashOfConfig":"12"},{"size":4047,"mtime":1610979800555,"results":"18","hashOfConfig":"12"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},"1asmuqv",{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"vlqupv",{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"24"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"E:\\react\\TODO\\todolist\\src\\index.tsx",[],["38","39"],"E:\\homework\\todolist\\src\\index.tsx",[],["40","41"],"E:\\homework\\todolist\\src\\rapper\\overrideFetch.ts",[],"E:\\homework\\todolist\\src\\reducers\\rootReducer.ts",[],"E:\\homework\\todolist\\src\\App.tsx",["42","43","44","45","46","47"],"import React,{useState} from 'react';\nimport './App.css';\nimport {useAPI,fetch} from './rapper';\n\nimport{List,ListItem,ListItemText,TextField,Button, CircularProgress, ListItemSecondaryAction} from '@material-ui/core'\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport RemoveIcon from '@material-ui/icons/RemoveCircleOutline'\nimport { useStore } from 'react-redux';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    button: {\n      margin: theme.spacing(1),\n    },\n  }),\n);\nlet todolist=[{id:1,name:'TODO:1',modify:true},{id:2,name:'TODO:2',modify:true},{id:3,name:'TODO:3',modify:true}];\nlet newId=4;\nfunction App() {\n  const classes = useStyles();\n  const[timestamp,setTimestamp]=useState(0)\n  const[data]=useAPI['GET/todo/list']()\n  const [todoName,setToDoName]=useState('')\n  const [modifyName,setmodifyName]=useState('')\n  const [searchName,setsearchName]=useState('')\n // const [isModify,setisModify]=useState(false)\n  const[loading,setLoading]=useState(false)\n  const createTodoHandler=async()=>{\n    // setLoading(true)\n    // await fetch['PUT/todo']({name:todoName})\n    // setLoading(false)\n    // setToDoName('')\n    // setTimestamp(Date.now())\n    setLoading(true)\n    let item={\n      id:newId,\n      name:'TODO:'+todoName,\n      modify:true\n    }\n    console.log(item)\n    todolist.push(item)\n    newId++\n    setLoading(false)\n    setToDoName('')\n    setTimestamp(Date.now())\n  }\n\n  const deleteTodoHandler=async(id:number)=>{\n    // setLoading(true)\n    // await fetch['DELETE/todo']({id})\n    // setLoading(false)\n    // setTimestamp(Date.now())\n    setLoading(true)\n    todolist.forEach((item,index,todolist)=>{\n      if(item.id===id){\n        todolist.splice(index,1)\n      }\n    })\n    setLoading(false)\n    setTimestamp(Date.now())\n  }\n\n  const modifyTodoHandler=(x: { id: any; name: any; })=>{\n    setLoading(true)\n    console.log(x,\"jin\")\n    todolist.forEach((item,index)=>{\n      if(item.id===x.id){\n        item.modify=false;\n        setmodifyName(item.name)\n      }\n    })\n    setLoading(false)\n    setTimestamp(Date.now())\n  }\n\n  const searchTodoHandler=(searchName:string)=>{\n    // setLoading(true)\n    // await fetch['DELETE/todo']({id})\n    // setLoading(false)\n    // setTimestamp(Date.now())\n    setLoading(true)\n    var tem:any[]=[]\n    console.log(\"搜索\",searchName)\n    todolist.forEach((item)=>{\n      console.log(item.name)\n      if((item.name)===(\"TODO:\"+searchName)){\n       tem.push(item);\n       console.log(tem)\n      }\n    })\n    todolist=tem;\n    setLoading(false)\n    setTimestamp(Date.now())\n  }\n\n  const modifyHandler=(id:number)=>{\n    if(modifyName!==''){\n      todolist.forEach((item,index)=>{\n        if(item.id===id){\n          let it=item;\n          it.name=\"TODO:\"+modifyName;\n          it.modify=true\n          console.log(it)\n          todolist.splice(index,1,it)\n          console.log(todolist)\n        }\n      })\n      setLoading(false)\n      setTimestamp(Date.now())\n    }\n   \n  }\n\n  return (\n    <div className=\"App\">\n      {loading &&<CircularProgress style={{margin:8}}/>}\n      <TextField\n          value={searchName}\n          onChange={e=>setsearchName(e.target.value)}/>\n      <Button\n        variant=\"outlined\"\n        color=\"secondary\"\n        onClick={()=>searchTodoHandler(searchName)}>\n        Search\n      </Button>\n     <List>\n       {todolist.map(x=>\n       <ListItem key={x.id}>\n        {(x.modify===true)?\n          (<ListItemText primary={x.name}\n            onClick={()=>modifyTodoHandler(x)}/>):\n         (<TextField\n          value={modifyName}\n          onChange={e=>setmodifyName(e.target.value)}/>\n          )}\n      <Button\n        variant=\"outlined\"\n        color=\"secondary\"\n        onClick={()=>modifyHandler(x.id)}>\n        Save\n      </Button>\n   \n         {/* <ListItemSecondaryAction>\n           <RemoveIcon onClick={()=>deleteTodoHandler(x.id)} />\n         </ListItemSecondaryAction> */}\n      <Button\n        variant=\"contained\"\n        color=\"secondary\"\n        className={classes.button}\n        startIcon={<DeleteIcon />}\n        onClick={()=>deleteTodoHandler(x.id)}>\n        Delete\n      </Button>\n       </ListItem>)}\n       \n     </List>\n     <div className=\"control\">\n       <TextField\n          placeholder=\"请输入todo的名称\"\n          value={todoName}\n          onChange={e=>setToDoName(e.target.value)}/>\n    <Button variant=\"outlined\"\n            color=\"primary\"\n            disabled={todoName.trim()===''}\n            style={{marginLeft:8}}\n            onClick={createTodoHandler}>\n              ADD\n    </Button>\n     </div>\n    </div>\n  );\n}\n\nexport default App;\n","E:\\homework\\todolist\\src\\rapper\\index.ts",[],"E:\\homework\\todolist\\src\\rapper\\redux.ts",[],"E:\\homework\\todolist\\src\\rapper\\request.ts",[],{"ruleId":"48","replacedBy":"49"},{"ruleId":"50","replacedBy":"51"},{"ruleId":"48","replacedBy":"52"},{"ruleId":"50","replacedBy":"53"},{"ruleId":"54","severity":1,"message":"55","line":3,"column":16,"nodeType":"56","messageId":"57","endLine":3,"endColumn":21},{"ruleId":"54","severity":1,"message":"58","line":5,"column":71,"nodeType":"56","messageId":"57","endLine":5,"endColumn":94},{"ruleId":"54","severity":1,"message":"59","line":8,"column":8,"nodeType":"56","messageId":"57","endLine":8,"endColumn":18},{"ruleId":"54","severity":1,"message":"60","line":9,"column":10,"nodeType":"56","messageId":"57","endLine":9,"endColumn":18},{"ruleId":"54","severity":1,"message":"61","line":22,"column":9,"nodeType":"56","messageId":"57","endLine":22,"endColumn":18},{"ruleId":"54","severity":1,"message":"62","line":23,"column":9,"nodeType":"56","messageId":"57","endLine":23,"endColumn":13},"no-native-reassign",["63"],"no-negated-in-lhs",["64"],["63"],["64"],"@typescript-eslint/no-unused-vars","'fetch' is defined but never used.","Identifier","unusedVar","'ListItemSecondaryAction' is defined but never used.","'RemoveIcon' is defined but never used.","'useStore' is defined but never used.","'timestamp' is assigned a value but never used.","'data' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]